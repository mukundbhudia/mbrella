<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">

    <title data-bind="text: cityName"></title>

    <!-- Bootstrap core CSS -->
    <link href="/stylesheets/bootstrap.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="/stylesheets/home.css" rel="stylesheet">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>

<body>

    <!-- Static navbar -->
    <nav class="navbar navbar-purp navbar-static-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">{{title}}</a>
            </div>
            <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="/">Home</a></li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    {{#userEmail}}
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">{{firstName}} <span class="caret"></span></a>
                        <ul class="dropdown-menu" role="menu">
                            <li role="presentation"><a role="menuitem" href="/myweather">My Weather</a></li>
                            <li role="presentation"><a role="menuitem" href="/myweather/user">Settings</a></li>
                            <li class="divider"></li>
                            <li role="presentation"><a role="menuitem" href="/logout">Logout</a></li>
                        </ul>
                    </li>
                    {{/userEmail}}
                    {{^userEmail}}
                    <li><a href="/signup">Sign up</a></li>
                    <li><a href="/login">Login</a></li>
                    {{/userEmail}}
                </ul>
                <div class="navbar-form navbar-right">
                    <input type="text" class="typeahead form-control" id="citySearch" placeholder="Enter a city name..." autocomplete="off">
                </div>
            </div><!--/.nav-collapse -->
        </div>
    </nav>


    <div class="container">

        <h2 data-bind="text: cityName() + ' - ' + countryName()" class="cover-heading"></h2>
        <div class="row">

            <div class="col-md-8">

                <div id="mainWeatherRow" class="row">
                    <div class="col-md-4">
                        <div id="weatherIconContainer">
                            <img data-bind="attr: { src: weatherIcon }" id="wIcon" src="" alt="">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div id="mainWeatherInfo">
                            <div data-bind="text: tempInDeg() + '&deg;C'" id="wTemp"></div>
                            <p data-bind="text: weatherSmallDesc() + ' - ' + weatherLargeDesc()" id="wDesc" class="lead"></p>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- <div class="col-md-8"> -->
                    <table id="weatherDataTable" class="table table-condensed">
                        <thead>
                            <tr>
                                <th id="feildCol">Feild</th>
                                <th id="statsCol">Stats</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <th scope="row">Cloud cover</th>
                                <td id="wCloud">
                                    <div class='progress'>
                                        <div data-bind="text: cloudCover() + '%', style: {width: cloudCover() + '%'}" class='progress-bar progress-bar-success' role='progressbar' aria-valuemin='0' aria-valuemax='100'>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">Wind (speed | direction)</th>
                                <td data-bind="text: windInfo() + '&deg;'" id="wWind"></td>
                            </tr>
                            <tr>
                                <th scope="row">Pressure</th>
                                <td data-bind="text: pressure() + ' mb'" id="wPressure"></td>
                            </tr>
                            <tr>
                                <th scope="row">Humidity</th>
                                <td id="wHumidity">
                                    <div class='progress'>
                                        <div data-bind="text: humidity() + '%', style: {width: humidity() + '%'}" class='progress-bar' role='progressbar' aria-valuemin='0' aria-valuemax='100'>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">Sunrise</th>
                                <td data-bind="text: sunrise" id="wSunrise"></td>
                            </tr>
                            <tr>
                                <th scope="row">Sunset</th>
                                <td data-bind="text: sunset" id="wSunset"></td>
                            </tr>
                        </tbody>
                    </table>
                    <!-- </div> -->
                </div>

            </div>

            <div class="col-md-4">
                <div id="map-canvas"></div>
            </div>

        </div>




    </div> <!-- /container -->

    <footer class="footer">
        <div class="container">
            {{#userEmail}}
            <p class="text-muted">mbrella</p>
            {{/userEmail}}
            {{^userEmail}}
            <p class="text-muted"><a href="/login">Log in</a> or <a href="/signup">sign up</a> to get started.</p>
            {{/userEmail}}
        </div>
    </footer>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="/javascripts/jquery.min.js"></script>
    <script src="/javascripts/knockout.js"></script>
    <script src="/javascripts/sammy-latest.min.js"></script>
    <script src="/javascripts/bootstrap.js"></script>
    <script src="/javascripts/typeahead.js"></script>
    <script src="/javascripts/typeaheadSettings.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCAUb2FVPgPIAaDqtF0gC0j4Km5xwU8d1w"></script>
    <script type="text/javascript">

    function getDate(unixUTC) {
        var date = new Date(parseInt(unixUTC)*1000);
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var seconds = date.getSeconds();
        return hours + ':' + minutes + " GMT";
    }

    function getWindChill(temp, windSpeed){
        return 13.12 + 0.6215*temp + ((windSpeed*3.6)^(0.16))*(0.3965*temp - 11.37);
    }

    function WeatherViewModel() {
        var self = this;
        self.weatherCityId = ko.observable();
        self.cityName = ko.observable();
        self.countryName = ko.observable();
        self.icon = ko.observable();
        self.temp = ko.observable();
        self.weatherSmallDesc = ko.observable();
        self.weatherLargeDesc = ko.observable();
        self.cloudCover = ko.observable();
        self.windSpeed = ko.observable();
        self.windDirection = ko.observable();
        self.pressure = ko.observable();
        self.humidity = ko.observable();
        self.sunrise = ko.observable();
        self.sunset = ko.observable();
        self.latitude = ko.observable();
        self.longtitude = ko.observable();

        self.tempInDeg = ko.computed(function() {
            return Math.ceil(self.temp() - 273.15);
        });

        self.weatherIcon = ko.computed(function() {
            return "/images/weatherIcons/" + self.icon() + ".png";
        });

        self.windInfo = ko.computed(function() {
            return self.windSpeed() + " mps | " + self.windDirection();
        });

        Sammy(function() {
            this.get('/#/:cityId', function() {
                self.weatherCityId(this.params.cityId);
                $.getJSON("/getWeather/" + this.params.cityId, function(data) {
                    if (data) {
                        //TODO: Max and min temps shown elsewhere
                        self.cityName(data.name);
                        self.countryName(data.sys.country);
                        self.temp(data.main.temp);
                        self.icon(data.weather[0].icon);
                        self.weatherSmallDesc(data.weather[0].main);
                        self.weatherLargeDesc(data.weather[0].description);
                        self.cloudCover(data.clouds.all);
                        self.windSpeed(data.wind.speed);
                        self.windDirection(data.wind.deg);
                        self.pressure(data.main.pressure);
                        self.humidity(data.main.humidity);
                        self.sunrise(getDate(data.sys.sunrise));
                        self.sunset(getDate(data.sys.sunset));
                        self.longtitude(data.coord.lon);
                        self.latitude(data.coord.lat);
                        gMapInitialize();
                    } else {
                        console.error("HTTP GET error: Unable to get weather data.");
                    }
                });
            });
        }).run();
    }

    var wvm = new WeatherViewModel();
    ko.applyBindings(wvm);

    function gMapInitialize() {
        var cityLatlng = new google.maps.LatLng(wvm.latitude(), wvm.longtitude());
        var mapOptions = {
            center: cityLatlng,
            zoom: 8,
            draggable: false
        };
        var map = new google.maps.Map(document.getElementById('map-canvas'),
        mapOptions);
        var marker = new google.maps.Marker({
            position: cityLatlng,
            map: map,
            title: 'City'
        });
    }

    </script>
</body>
</html>
